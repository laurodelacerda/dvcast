//
// Generated file, do not edit! Created by nedtool 5.3 from messages/DVCastData.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __DVCASTDATA_M_H
#define __DVCASTDATA_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/base/utils/Coord.h"
//#include "veins/modules/messages/BasicSafetyMessage_m.h"
#include "DVCastHello_m.h" 
// }}

/**
 * Class generated from <tt>messages/DVCastData.msg:12</tt> by nedtool.
 * <pre>
 * packet DVCastData extends DVCastHello//BasicSafetyMessage
 * {
 *     //    double senderAngle;
 *     Coord roiUp;
 *     Coord roiDown;
 * }
 * </pre>
 */
class DVCastData : public ::DVCastHello
{
  protected:
    Coord roiUp;
    Coord roiDown;

  private:
    void copy(const DVCastData& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DVCastData&);

  public:
    DVCastData(const char *name=nullptr, short kind=0);
    DVCastData(const DVCastData& other);
    virtual ~DVCastData();
    DVCastData& operator=(const DVCastData& other);
    virtual DVCastData *dup() const override {return new DVCastData(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual Coord& getRoiUp();
    virtual const Coord& getRoiUp() const {return const_cast<DVCastData*>(this)->getRoiUp();}
    virtual void setRoiUp(const Coord& roiUp);
    virtual Coord& getRoiDown();
    virtual const Coord& getRoiDown() const {return const_cast<DVCastData*>(this)->getRoiDown();}
    virtual void setRoiDown(const Coord& roiDown);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DVCastData& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DVCastData& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DVCASTDATA_M_H

